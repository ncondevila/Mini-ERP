package com.erp;

import com.erp.db.SQLiteConnector;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

/**
 * Clase principal que inicia y configura la aplicaci√≥n JavaFX del Mini ERP.
 * <p>
 * Hereda de {@link Application}, sirviendo como el punto de entrada para el framework JavaFX.
 * Se encarga de inicializar la base de datos, cargar la vista principal y aplicar los estilos.
 *
 * @author No√©
 */
public class App extends Application {

    /**
     * El m√©todo main es el primer c√≥digo que se ejecuta.
     * <p>
     * Su √∫nica responsabilidad es llamar a {@link #launch(String...)}, que inicia el
     * ciclo de vida de la aplicaci√≥n JavaFX, lo que eventualmente lleva a la
     * ejecuci√≥n del m√©todo {@link #start(Stage)}.
     *
     * @param args Argumentos de la l√≠nea de comandos (no los usamos aqu√≠).
     */
    public static void main(String[] args) {
        // Lanza la aplicaci√≥n JavaFX, que a su vez llamar√° al m√©todo start().
        launch(args);
    }

    /**
     * Este m√©todo se ejecuta justo despu√©s de 'launch()'. Aqu√≠ es donde se
     * configura y se muestra la interfaz gr√°fica principal.
     *
     * @see <a href="https://docs.oracle.com/javase/8/javafx/api/javafx/application/Application.html#start-javafx.stage.Stage-">Documentaci√≥n de Application#start</a>
     * @param stage El 'escenario' o ventana principal que nos proporciona JavaFX.
     * @throws Exception Si hay alg√∫n error al cargar el archivo FXML o CSS.
     */
    @Override
    public void start(Stage stage) throws Exception {
        // Antes de mostrar nada, me aseguro de que la base de datos est√© lista.
        // Esto crea las tablas si es la primera vez que se ejecuta.
        SQLiteConnector.initDatabase();

        // Carga el dise√±o de la interfaz principal desde el archivo FXML.
        // Parent es un nodo gen√©rico que puede contener a todos los dem√°s nodos de la UI.
        Parent root = FXMLLoader.load(getClass().getResource("/fxml/main.fxml"));

        // Crea la 'escena' que contendr√° el dise√±o que se acaba de cargar.
        // Se define un tama√±o inicial para la ventana.
        Scene scene = new Scene(root, 802, 600);

        // Localiza y aplica la hoja de estilos 'estilo.css' a toda la escena.
        // Esto asegura que todos los componentes tengan una apariencia consistente.
        scene.getStylesheets().add(
            getClass().getClassLoader().getResource("css/estilo.css").toExternalForm()
        );

        // Configuro la ventana principal:
        stage.setMinWidth(700); // Establezco un ancho m√≠nimo para que no se vea mal.
        stage.setMinHeight(550); // Y tambi√©n un alto m√≠nimo.
        stage.setScene(scene); // Le digo a la ventana qu√© escena debe mostrar.
        stage.setTitle("Mini ERP"); // Pongo el t√≠tulo a la ventana.
        stage.show(); // ¬°Y finalmente, la muestro!
    }

    /*
     * Dejo este bloque comentado por si necesito hacer una prueba r√°pida
     * de JavaFX sin tener que cargar toda la aplicaci√≥n.
     * Es √∫til para verificar que el entorno funciona correctamente.
     *
     * @Override
     * public void start(Stage stage) {
     *     Label label = new Label("Hola, No√© üëã");
     *     Scene scene = new Scene(new StackPane(label), 400, 200);
     *     stage.setScene(scene);
     *     stage.setTitle("Prueba JavaFX");
     *     stage.show();
     * }
     */
}
